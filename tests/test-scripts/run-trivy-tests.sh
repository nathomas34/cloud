#!/bin/bash

echo "üõ°Ô∏è Ex√©cution des tests Trivy..."
echo "=================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Cr√©er le dossier de r√©sultats
mkdir -p test-results/trivy

echo -e "${BLUE}üìã Test 1: Scan des vuln√©rabilit√©s de d√©pendances${NC}"
trivy fs tests/vulnerable-files/package.json \
    --format table \
    --output test-results/trivy/vulnerabilities-npm.txt \
    --severity CRITICAL,HIGH,MEDIUM

VULN_COUNT=$(trivy fs tests/vulnerable-files/package.json --format json | jq '.Results[0].Vulnerabilities | length' 2>/dev/null || echo "0")
echo "Vuln√©rabilit√©s trouv√©es: $VULN_COUNT"
print_result $? "Scan des vuln√©rabilit√©s NPM"

echo -e "\n${BLUE}üìã Test 2: Scan des vuln√©rabilit√©s Python${NC}"
trivy fs tests/vulnerable-files/requirements.txt \
    --format table \
    --output test-results/trivy/vulnerabilities-python.txt \
    --severity CRITICAL,HIGH,MEDIUM

PYTHON_VULN_COUNT=$(trivy fs tests/vulnerable-files/requirements.txt --format json | jq '.Results[0].Vulnerabilities | length' 2>/dev/null || echo "0")
echo "Vuln√©rabilit√©s Python trouv√©es: $PYTHON_VULN_COUNT"
print_result $? "Scan des vuln√©rabilit√©s Python"

echo -e "\n${BLUE}üîê Test 3: Scan des secrets expos√©s${NC}"
trivy fs tests/vulnerable-files/ \
    --scanners secret \
    --format table \
    --output test-results/trivy/secrets.txt

SECRET_COUNT=$(trivy fs tests/vulnerable-files/ --scanners secret --format json | jq '[.Results[]?.Secrets[]?] | length' 2>/dev/null || echo "0")
echo "Secrets trouv√©s: $SECRET_COUNT"
print_result $? "Scan des secrets"

echo -e "\n${BLUE}üê≥ Test 4: Scan du Dockerfile${NC}"
trivy config tests/vulnerable-files/Dockerfile \
    --format table \
    --output test-results/trivy/dockerfile-misconfigs.txt

print_result $? "Scan du Dockerfile"

echo -e "\n${BLUE}üìä Test 5: G√©n√©ration du rapport SARIF${NC}"
trivy fs tests/vulnerable-files/ \
    --scanners vuln,secret \
    --format sarif \
    --output test-results/trivy/trivy-results.sarif

if [ -f "test-results/trivy/trivy-results.sarif" ]; then
    SARIF_SIZE=$(stat -f%z test-results/trivy/trivy-results.sarif 2>/dev/null || stat -c%s test-results/trivy/trivy-results.sarif 2>/dev/null)
    echo "Taille du fichier SARIF: $SARIF_SIZE bytes"
    print_result 0 "G√©n√©ration du rapport SARIF"
else
    print_result 1 "G√©n√©ration du rapport SARIF"
fi

echo -e "\n${YELLOW}üìà R√©sum√© des tests Trivy:${NC}"
echo "- Vuln√©rabilit√©s NPM: $VULN_COUNT"
echo "- Vuln√©rabilit√©s Python: $PYTHON_VULN_COUNT"
echo "- Secrets d√©tect√©s: $SECRET_COUNT"
echo "- Rapports g√©n√©r√©s dans: test-results/trivy/"

echo -e "\n${GREEN}üéØ Tests Trivy termin√©s!${NC}"