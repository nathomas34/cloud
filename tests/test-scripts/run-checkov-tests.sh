#!/bin/bash

echo "‚öôÔ∏è Ex√©cution des tests Checkov..."
echo "================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Cr√©er le dossier de r√©sultats
mkdir -p test-results/checkov

echo -e "${BLUE}üìã Test 1: Scan Terraform${NC}"
checkov -f tests/vulnerable-files/terraform/main.tf \
    --output cli \
    --output-file-path test-results/checkov/terraform-results.txt \
    --soft-fail

TF_FAILED=$(checkov -f tests/vulnerable-files/terraform/main.tf --output json --quiet | jq '.summary.failed' 2>/dev/null || echo "0")
echo "Contr√¥les Terraform √©chou√©s: $TF_FAILED"
print_result 0 "Scan Terraform"

echo -e "\n${BLUE}üê≥ Test 2: Scan Dockerfile${NC}"
checkov -f tests/vulnerable-files/Dockerfile \
    --framework dockerfile \
    --output cli \
    --output-file-path test-results/checkov/dockerfile-results.txt \
    --soft-fail

DOCKER_FAILED=$(checkov -f tests/vulnerable-files/Dockerfile --framework dockerfile --output json --quiet | jq '.summary.failed' 2>/dev/null || echo "0")
echo "Contr√¥les Dockerfile √©chou√©s: $DOCKER_FAILED"
print_result 0 "Scan Dockerfile"

echo -e "\n${BLUE}‚ò∏Ô∏è Test 3: Scan Kubernetes${NC}"
checkov -f tests/vulnerable-files/kubernetes/deployment.yaml \
    --framework kubernetes \
    --output cli \
    --output-file-path test-results/checkov/kubernetes-results.txt \
    --soft-fail

K8S_FAILED=$(checkov -f tests/vulnerable-files/kubernetes/deployment.yaml --framework kubernetes --output json --quiet | jq '.summary.failed' 2>/dev/null || echo "0")
echo "Contr√¥les Kubernetes √©chou√©s: $K8S_FAILED"
print_result 0 "Scan Kubernetes"

echo -e "\n${BLUE}üîê Test 4: Scan des secrets${NC}"
checkov -f tests/vulnerable-files/secrets.env \
    --framework secrets \
    --output cli \
    --output-file-path test-results/checkov/secrets-results.txt \
    --soft-fail

SECRETS_FAILED=$(checkov -f tests/vulnerable-files/secrets.env --framework secrets --output json --quiet | jq '.summary.failed' 2>/dev/null || echo "0")
echo "Secrets d√©tect√©s: $SECRETS_FAILED"
print_result 0 "Scan des secrets"

echo -e "\n${BLUE}üìä Test 5: G√©n√©ration du rapport SARIF${NC}"
checkov -d tests/vulnerable-files/ \
    --output sarif \
    --output-file-path test-results/checkov/checkov-results.sarif \
    --quiet \
    --soft-fail

if [ -f "test-results/checkov/checkov-results.sarif" ]; then
    SARIF_SIZE=$(stat -f%z test-results/checkov/checkov-results.sarif 2>/dev/null || stat -c%s test-results/checkov/checkov-results.sarif 2>/dev/null)
    echo "Taille du fichier SARIF: $SARIF_SIZE bytes"
    print_result 0 "G√©n√©ration du rapport SARIF"
else
    print_result 1 "G√©n√©ration du rapport SARIF"
fi

echo -e "\n${BLUE}üìà Test 6: Scan complet du r√©pertoire${NC}"
checkov -d tests/vulnerable-files/ \
    --output cli \
    --output-file-path test-results/checkov/complete-scan.txt \
    --compact \
    --soft-fail

TOTAL_FAILED=$(checkov -d tests/vulnerable-files/ --output json --quiet --soft-fail | jq '.summary.failed' 2>/dev/null || echo "0")
TOTAL_PASSED=$(checkov -d tests/vulnerable-files/ --output json --quiet --soft-fail | jq '.summary.passed' 2>/dev/null || echo "0")
echo "Total contr√¥les √©chou√©s: $TOTAL_FAILED"
echo "Total contr√¥les r√©ussis: $TOTAL_PASSED"
print_result 0 "Scan complet"

echo -e "\n${YELLOW}üìà R√©sum√© des tests Checkov:${NC}"
echo "- Contr√¥les Terraform √©chou√©s: $TF_FAILED"
echo "- Contr√¥les Dockerfile √©chou√©s: $DOCKER_FAILED"
echo "- Contr√¥les Kubernetes √©chou√©s: $K8S_FAILED"
echo "- Secrets d√©tect√©s: $SECRETS_FAILED"
echo "- Total √©chou√©s: $TOTAL_FAILED"
echo "- Total r√©ussis: $TOTAL_PASSED"
echo "- Rapports g√©n√©r√©s dans: test-results/checkov/"

echo -e "\n${GREEN}üéØ Tests Checkov termin√©s!${NC}"